<!--
	This file contains XAML styles that simplify application development.

	These are not merely convenient, but are required by most Visual Studio project and item templates.
	Removing, renaming, or otherwise modifying the content of these files may result in a project that
	does not build, or that will not build once additional pages are added.  If variations on these
	styles are desired it is recommended that you copy the content under a new name and modify your
	private copy.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!--  Non-brush values that vary across themes  -->

	<ResourceDictionary.ThemeDictionaries>
		<ResourceDictionary x:Key="Default">
			<x:String x:Key="BackButtonGlyph">&#xE071;</x:String>
			<x:String x:Key="BackButtonSnappedGlyph">&#xE0BA;</x:String>
		</ResourceDictionary>

		<ResourceDictionary x:Key="HighContrast">
			<x:String x:Key="BackButtonGlyph">&#xE071;</x:String>
			<x:String x:Key="BackButtonSnappedGlyph">&#xE0C4;</x:String>
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>

	<x:String x:Key="ChevronGlyph">&#xE26B;</x:String>

	<!--  RichTextBlock styles  -->

	<Style x:Key="BasicRichTextStyle" TargetType="RichTextBlock">
		<Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}" />
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
		<Setter Property="TextTrimming" Value="WordEllipsis" />
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="Typography.StylisticSet20" Value="True" />
		<Setter Property="Typography.DiscretionaryLigatures" Value="True" />
		<Setter Property="Typography.CaseSensitiveForms" Value="True" />
	</Style>

	<Style x:Key="BaselineRichTextStyle"
	       BasedOn="{StaticResource BasicRichTextStyle}"
	       TargetType="RichTextBlock">
		<Setter Property="LineHeight" Value="20" />
		<Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
		<!--  Properly align text along its baseline  -->
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-1" Y="4" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ItemRichTextStyle"
	       BasedOn="{StaticResource BaselineRichTextStyle}"
	       TargetType="RichTextBlock" />

	<Style x:Key="BodyRichTextStyle"
	       BasedOn="{StaticResource BaselineRichTextStyle}"
	       TargetType="RichTextBlock">
		<Setter Property="FontWeight" Value="SemiLight" />
	</Style>

	<!--  TextBlock styles  -->

	<Style x:Key="BasicTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}" />
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
		<Setter Property="TextTrimming" Value="WordEllipsis" />
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="Typography.StylisticSet20" Value="True" />
		<Setter Property="Typography.DiscretionaryLigatures" Value="True" />
		<Setter Property="Typography.CaseSensitiveForms" Value="True" />
	</Style>

	<Style x:Key="BaselineTextStyle"
	       BasedOn="{StaticResource BasicTextStyle}"
	       TargetType="TextBlock">
		<Setter Property="LineHeight" Value="20" />
		<Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
		<!--  Properly align text along its baseline  -->
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-1" Y="4" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="HeaderTextStyle"
	       BasedOn="{StaticResource BaselineTextStyle}"
	       TargetType="TextBlock">
		<Setter Property="FontSize" Value="56" />
		<Setter Property="FontWeight" Value="Light" />
		<Setter Property="LineHeight" Value="40" />
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-2" Y="8" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SubheaderTextStyle"
	       BasedOn="{StaticResource BaselineTextStyle}"
	       TargetType="TextBlock">
		<Setter Property="FontSize" Value="26.667" />
		<Setter Property="FontWeight" Value="Light" />
		<Setter Property="LineHeight" Value="30" />
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-1" Y="6" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TitleTextStyle"
	       BasedOn="{StaticResource BaselineTextStyle}"
	       TargetType="TextBlock">
		<Setter Property="FontWeight" Value="SemiBold" />
	</Style>

	<Style x:Key="SubtitleTextStyle"
	       BasedOn="{StaticResource BaselineTextStyle}"
	       TargetType="TextBlock">
		<Setter Property="FontWeight" Value="Normal" />
	</Style>

	<Style x:Key="ItemTextStyle"
	       BasedOn="{StaticResource BaselineTextStyle}"
	       TargetType="TextBlock" />

	<Style x:Key="BodyTextStyle"
	       BasedOn="{StaticResource BaselineTextStyle}"
	       TargetType="TextBlock">
		<Setter Property="FontWeight" Value="SemiLight" />
	</Style>

	<Style x:Key="CaptionTextStyle"
	       BasedOn="{StaticResource BaselineTextStyle}"
	       TargetType="TextBlock">
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}" />
	</Style>

	<Style x:Key="GroupHeaderTextStyle" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
		<Setter Property="TextTrimming" Value="WordEllipsis" />
		<Setter Property="TextWrapping" Value="NoWrap" />
		<Setter Property="Typography.StylisticSet20" Value="True" />
		<Setter Property="Typography.DiscretionaryLigatures" Value="True" />
		<Setter Property="Typography.CaseSensitiveForms" Value="True" />
		<Setter Property="FontSize" Value="26.667" />
		<Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
		<Setter Property="FontWeight" Value="Light" />
		<Setter Property="LineHeight" Value="30" />
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TranslateTransform X="-1" Y="6" />
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Button styles  -->

	<!--
		TextButtonStyle is used to style a Button using subheader-styled text with no other adornment.  There
		are two styles that are based on TextButtonStyle (TextPrimaryButtonStyle and TextSecondaryButtonStyle)
		which are used in the GroupedItemsPage as a group header and in the FileOpenPickerPage for triggering
		commands.
	-->
	<Style x:Key="TextButtonStyle" TargetType="ButtonBase">
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPointerOverForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="FocusVisualWhite"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="FocusVisualBlack"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked" />
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="Text" Content="{TemplateBinding Content}" />
						<Rectangle x:Name="FocusVisualWhite"
						           IsHitTestVisible="False"
						           Opacity="0"
						           Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
						           StrokeDashArray="1,1"
						           StrokeDashOffset="1.5"
						           StrokeEndLineCap="Square" />
						<Rectangle x:Name="FocusVisualBlack"
						           IsHitTestVisible="False"
						           Opacity="0"
						           Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
						           StrokeDashArray="1,1"
						           StrokeDashOffset="0.5"
						           StrokeEndLineCap="Square" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TextPrimaryButtonStyle"
	       BasedOn="{StaticResource TextButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="Foreground" Value="{StaticResource ApplicationHeaderForegroundThemeBrush}" />
	</Style>

	<Style x:Key="TextSecondaryButtonStyle"
	       BasedOn="{StaticResource TextButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="Foreground" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}" />
	</Style>

	<!--
		TextRadioButtonStyle is used to style a RadioButton using subheader-styled text with no other adornment.
		This style is used in the SearchResultsPage to allow selection among filters.
	-->
	<Style x:Key="TextRadioButtonStyle"
	       BasedOn="{StaticResource TextButtonStyle}"
	       TargetType="RadioButton">
		<Setter Property="Margin" Value="0,0,30,0" />
	</Style>

	<!--
		AppBarButtonStyle is used to style a Button (or ToggleButton) for use in an App Bar.  Content will be centered
		and should fit within the 40 pixel radius glyph provided.  16-point Segoe UI Symbol is used for content text
		to simplify the use of glyphs from that font.  AutomationProperties.Name is used for the text below the glyph.
	-->
	<Style x:Key="AppBarButtonStyle" TargetType="ButtonBase">
		<Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="FontFamily" Value="Segoe UI Symbol" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="20" />
		<Setter Property="AutomationProperties.ItemType" Value="App Bar Button" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Grid x:Name="RootGrid"
					      Width="100"
					      Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<VisualState x:Name="FullScreenLandscape" />
								<VisualState x:Name="Filled" />
								<VisualState x:Name="FullScreenPortrait">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Snapped">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>-->
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>-->
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="FocusVisualWhite"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="FocusVisualBlack"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<!--<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="OutlineGlyph"
										                 Storyboard.TargetProperty="Opacity"
										                 To="0" />-->
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<StackPanel Margin="0,12,0,11" VerticalAlignment="Top">
							<Grid Width="40"
							      Height="40"
							      Margin="0,0,0,5"
							      HorizontalAlignment="Center">
								<TextBlock x:Name="BackgroundGlyph"
								           Margin="-4,-19,0,0"
								           FontFamily="Segoe UI Symbol"
								           FontSize="53.333"
								           Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"
								           Text="&#xE0A8;" />
								<!--<TextBlock x:Name="OutlineGlyph"
								           Margin="-4,-19,0,0"
								           FontFamily="Segoe UI Symbol"
								           FontSize="53.333"
								           Text="&#xE0A7;" />-->
								<ContentPresenter x:Name="Content"
								                  Margin="-1,-1,0,0"
								                  HorizontalAlignment="Center"
								                  VerticalAlignment="Center" />
							</Grid>
							<TextBlock x:Name="TextLabel"
							           Width="88"
							           MaxHeight="32"
							           Margin="0,0,2,0"
							           FontSize="12"
							           Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
							           Style="{StaticResource BasicTextStyle}"
							           Text="{TemplateBinding AutomationProperties.Name}"
							           TextAlignment="Center"
							           TextTrimming="WordEllipsis" />
						</StackPanel>
						<Rectangle x:Name="FocusVisualWhite"
						           IsHitTestVisible="False"
						           Opacity="0"
						           Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
						           StrokeDashArray="1,1"
						           StrokeDashOffset="1.5"
						           StrokeEndLineCap="Square" />
						<Rectangle x:Name="FocusVisualBlack"
						           IsHitTestVisible="False"
						           Opacity="0"
						           Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
						           StrokeDashArray="1,1"
						           StrokeDashOffset="0.5"
						           StrokeEndLineCap="Square" />

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="InlineButtonStyle" TargetType="ButtonBase">
		<Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="FontFamily" Value="Segoe UI Symbol" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="20" />
		<Setter Property="AutomationProperties.ItemType" Value="App Bar Button" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Grid x:Name="RootGrid"
					      Width="60"
					      Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<VisualState x:Name="FullScreenLandscape" />
								<VisualState x:Name="Filled" />
								<VisualState x:Name="FullScreenPortrait">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="35" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Snapped">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="35" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>-->
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>-->
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>-->
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="FocusVisualWhite"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="FocusVisualBlack"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="OutlineGlyph"
										                 Storyboard.TargetProperty="Opacity"
										                 To="0" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Width="35"
						      Height="35"
						      HorizontalAlignment="Center">
							<TextBlock x:Name="BackgroundGlyph"
							           Margin="3,-6.5,0,0"
							           FontFamily="Segoe UI Symbol"
							           FontSize="33.111"
							           Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"
							           Text="&#xE0A8;" />
							<ContentPresenter x:Name="Content"
							                  Margin="-1,-1,0,0"
							                  HorizontalAlignment="Center"
							                  VerticalAlignment="Center" />
						</Grid>
						<Rectangle x:Name="FocusVisualWhite"
						           IsHitTestVisible="False"
						           Opacity="0"
						           Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
						           StrokeDashArray="1,1"
						           StrokeDashOffset="1.5"
						           StrokeEndLineCap="Square" />
						<Rectangle x:Name="FocusVisualBlack"
						           IsHitTestVisible="False"
						           Opacity="0"
						           Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
						           StrokeDashArray="1,1"
						           StrokeDashOffset="0.5"
						           StrokeEndLineCap="Square" />

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--
		Standard AppBarButton Styles for use with Button and ToggleButton

		An AppBarButton Style is provided for each of the glyphs in the Segoe UI Symbol font.
		Uncomment any style you reference (as not all may be required).
	-->

    
    
	<Style x:Key="RefreshAppBarButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="RefreshAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Refresh" />
		<Setter Property="Content" Value="&#xE117;" />
	</Style>

	<Style x:Key="CommentAppBarButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="CommentAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Comment" />
		<Setter Property="Content" Value="&#xE134;" />
	</Style>

	<Style x:Key="CommentInlineButtonStyle"
	       BasedOn="{StaticResource InlineButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="Content" Value="&#xE134;" />
	</Style>

	<Style x:Key="PinAppBarButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="PinAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Pin" />
		<Setter Property="Content" Value="&#xE141;" />
	</Style>

	<Style x:Key="UnPinAppBarButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="UnPinAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Unpin" />
		<Setter Property="Content" Value="&#xE196;" />
	</Style>
	<Style x:Key="OpenFileAppBarButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="OpenFileAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Open File" />
		<Setter Property="Content" Value="&#xE1A5;" />
	</Style>
	<Style x:Key="PhotoAppBarButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="PhotoAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Photo" />
		<Setter Property="Content" Value="&#xE114;" />
	</Style>
	<Style x:Key="PhotoInlineButtonStyle"
	       BasedOn="{StaticResource InlineButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="PhotoAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Photo" />
		<Setter Property="Content" Value="&#xE114;" />
	</Style>
	<Style x:Key="ReadAppBarButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="ReadAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Read" />
		<Setter Property="Content" Value="&#xE166;" />
	</Style>
	<Style x:Key="ReadInlineButtonStyle"
	       BasedOn="{StaticResource InlineButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="Content" Value="&#xE166;" />
	</Style>
	<Style x:Key="SearchAppBarButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="SearchAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Search" />
		<Setter Property="Content" Value="&#xE11A;" />
	</Style>
	<Style x:Key="SearchButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="Content" Value="&#xE11A;" />
	</Style>
	<Style x:Key="TagAppBarButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="TagAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Tag" />
		<Setter Property="Content" Value="&#xE1CB;" />
	</Style>

	<Style x:Key="TagInlineButtonStyle"
	       BasedOn="{StaticResource InlineButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="TagAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Tag" />
		<Setter Property="Content" Value="&#xE1CB;" />
	</Style>

	<Style x:Key="SortAppBarButtonStyle"
	       BasedOn="{StaticResource AppBarButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="AutomationProperties.AutomationId" Value="SortAppBarButton" />
		<Setter Property="AutomationProperties.Name" Value="Sort" />
		<Setter Property="Content" Value="&#xE174;" />
	</Style>
	<Style x:Key="SortInlineButtonStyle"
	       BasedOn="{StaticResource InlineButtonStyle}"
	       TargetType="ButtonBase">
		<Setter Property="Content" Value="&#xE174;" />
	</Style>

	<Style x:Key="SendAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="SendAppBarButton"/>
		<Setter Property="AutomationProperties.Name" Value="Send"/>
		<Setter Property="Content" Value="&#xE122;"/>
	</Style>

	<Style x:Key="SendInlineButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource InlineButtonStyle}">
		<Setter Property="AutomationProperties.AutomationId" Value="SendInlineButton"/>
		<Setter Property="AutomationProperties.Name" Value="Send"/>
		<Setter Property="Content" Value="&#xE122;"/>
	</Style>


	<!--  Title area styles  -->

	<Style x:Key="PageHeaderTextStyle"
	       BasedOn="{StaticResource HeaderTextStyle}"
	       TargetType="TextBlock">
		<Setter Property="TextWrapping" Value="NoWrap" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="Margin" Value="0,0,30,40" />
	</Style>

	<Style x:Key="PageSubheaderTextStyle"
	       BasedOn="{StaticResource SubheaderTextStyle}"
	       TargetType="TextBlock">
		<Setter Property="TextWrapping" Value="NoWrap" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="Margin" Value="0,0,0,40" />
	</Style>

	<Style x:Key="SnappedPageHeaderTextStyle"
	       BasedOn="{StaticResource PageSubheaderTextStyle}"
	       TargetType="TextBlock">
		<Setter Property="Margin" Value="0,0,18,40" />
	</Style>

	

	<Style x:Key="HorizontalScrollViewerStyle" TargetType="ScrollViewer">
		<Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
	</Style>

	<Style x:Key="VerticalScrollViewerStyle" TargetType="ScrollViewer">
		<Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
	</Style>

	<!--  Page layout roots typically use entrance animations and a theme-appropriate background color  -->

	<Style x:Key="LayoutRootStyle" TargetType="Panel">
		<Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}" />
		<!--
			<Setter Property="ChildrenTransitions">
			<Setter.Value>
			<TransitionCollection>
			<EntranceThemeTransition/>
			</TransitionCollection>
			</Setter.Value>
			</Setter>
		-->
	</Style>

	<!--<Style x:Key="ThreadCommentListViewItemStyle"
	       BasedOn="{StaticResource CleanListViewItemStyle}"
	       TargetType="ListViewItem">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Padding" Value="0,2,0,2" />
	</Style>-->
</ResourceDictionary>
