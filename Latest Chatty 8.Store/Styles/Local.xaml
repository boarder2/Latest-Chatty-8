<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="using:Latest_Chatty_8.Controls"
                    xmlns:converters="using:Latest_Chatty_8.Converters"
                    xmlns:core="using:Latest_Chatty_8"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:model="using:Latest_Chatty_8.DataModel">

	<converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
	<converters:NullableBooleanConverter x:Key="NullableBooleanConverter" />
	<converters:BooleanToVisibilityConverter x:Key="BoolToVisConverter"
	                                         FalseValue="Collapsed"
	                                         TrueValue="Visible" />
	<converters:BooleanToVisibilityConverter x:Key="NotBoolToVisConverter"
	                                         FalseValue="Visible"
	                                         TrueValue="Collapsed" />
	<converters:BooleanToNewColorConverter x:Key="NewReplyConverter"
	                                       FalseValue="#999999"
	                                       TrueValue="White" />

	<converters:BooleanToDoubleConverter x:Key="PreviewTextSizeConverter"
	                                     FalseValue="68"
	                                     TrueValue="20" />
	<converters:BooleanToClosedDisplayModeConverter x:Key="BooleanToClosedDisplayModeConverter"
	                                                FalseValue="Minimal"
	                                                TrueValue="Compact" />
	<converters:PostCategoryConverter x:Key="CategoryConverter" x:Name="CategoryConverter" />
	<converters:MultiplicationConverter x:Key="IndentConverter" Multiplier="18.0" />
	<converters:MultiplicationConverter x:Key="PhoneIndentConverter" Multiplier="12.0" />
	<converters:MultiplicationConverter x:Key="LolIndicatorConverter" Multiplier="2" />
	<converters:StringIsNullOrEmptyVisibilityConverter x:Key="StringNullEmptyVisibilityConverter" />
	<converters:NotStringIsNullOrEmptyVisibilityConverter x:Key="NotStringNullEmptyVisibilityConverter" />
	<converters:RefreshRateConverter x:Key="RefreshRateConverter" />
	<converters:GreaterThanZeroVisibilityConverter x:Key="GreaterThanZeroVisibilityConverter" />
	<converters:AuthorTypeColorConverter x:Key="AuthorTypeToColorConverter" />
	<converters:RelativeDateTimeConverter x:Key="RelativeDateTimeConverter" />
	<converters:RefreshRateValueConverter x:Key="RefreshRateValueConverter" />
	<converters:BooleanNegationConverter x:Key="NotBooleanConverter" />
	<SolidColorBrush x:Key="ThemeHighlight" Color="Pink" />

	<Style x:Key="NoSelectListViewItemStyle" TargetType="ListViewItem">
		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="TabNavigation" Value="Local" />
		<Setter Property="IsHoldingEnabled" Value="True" />
		<Setter Property="Padding" Value="12,0,12,0" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
		<Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewItem">
					<ListViewItemPresenter HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
					                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
					                       CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
					                       CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
					                       CheckMode="Inline"
					                       ContentMargin="{TemplateBinding Padding}"
					                       ContentTransitions="{TemplateBinding ContentTransitions}"
					                       DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
					                       DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
					                       DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
					                       DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
					                       FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
					                       FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
					                       PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
					                       PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
					                       PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
					                       PressedBackground="Transparent"
					                       ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
					                       SelectedBackground="Transparent"
					                       SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
					                       SelectedPointerOverBackground="Transparent"
					                       SelectedPressedBackground="Transparent"
					                       SelectionCheckMarkVisualEnabled="False" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Name="ThreadListViewItemStyle" TargetType="ListViewItem">
		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
		<Setter Property="TabNavigation" Value="Local" />
		<Setter Property="IsHoldingEnabled" Value="True" />
		<Setter Property="Padding" Value="0,0,0,0" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
		<Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewItem">
					<Grid x:Name="ContentBorder"
					      Background="{TemplateBinding Background}"
					      BorderBrush="{TemplateBinding BorderBrush}"
					      BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<!--<Storyboard>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>-->
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="BorderBackground"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<!--<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="BorderBackground"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<!--<PointerDownThemeAnimation TargetName="ContentPresenter" />-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0"
										                 Storyboard.TargetName="MultiSelectCheck"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="BorderBackground"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<!--<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0"
										                 Storyboard.TargetName="MultiSelectCheck"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="BorderBackground"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<!--<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0"
										                 Storyboard.TargetName="MultiSelectCheck"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="BorderBackground"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<!--<PointerDownThemeAnimation TargetName="ContentPresenter" />-->
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="ContentBorder"
										                 Storyboard.TargetProperty="Opacity"
										                 To="{ThemeResource ListViewItemDisabledThemeOpacity}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MultiSelectStates">
								<VisualState x:Name="MultiSelectDisabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
											                      KeyTime="0:0:0.333"
											                      Value="-32" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
											                      KeyTime="0:0:0.333"
											                      Value="32" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
											                      KeyTime="0:0:0.333"
											                      Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
											<DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultiSelectEnabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
											                      KeyTime="0:0:0.333"
											                      Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
											                      KeyTime="0:0:0.333"
											                      Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1"
											                      KeyTime="0:0:0.333"
											                      Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable" />
								<VisualState x:Name="DataPlaceholder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualState x:Name="NoReorderHint" />
								<VisualState x:Name="BottomReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Bottom"
										                        ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
										                        TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Top"
										                        ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
										                        TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Right"
										                        ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
										                        TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftReorderHint">
									<Storyboard>
										<DragOverThemeAnimation Direction="Left"
										                        ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
										                        TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint" />
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualState x:Name="NotDragging" />
								<VisualState x:Name="Dragging">
									<Storyboard>
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="ContentBorder"
										                 Storyboard.TargetProperty="Opacity"
										                 To="{ThemeResource ListViewItemDragThemeOpacity}" />
										<DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggingTarget">
									<Storyboard>
										<DropTargetItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingPrimary">
									<Storyboard>
										<!--
											These two Opacity animations are required - the FadeInThemeAnimations
											on the same elements animate an internal Opacity.
										-->
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="MultiArrangeOverlayBackground"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="MultiArrangeOverlayText"
										                 Storyboard.TargetProperty="Opacity"
										                 To="1" />
										<DoubleAnimation Duration="0"
										                 Storyboard.TargetName="ContentBorder"
										                 Storyboard.TargetProperty="Opacity"
										                 To="{ThemeResource ListViewItemDragThemeOpacity}" />
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
										<DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingSecondary">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggedPlaceholder">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging" />
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="BorderBackground"
						           Control.IsTemplateFocusTarget="True"
						           Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}"
						           IsHitTestVisible="False"
						           Opacity="0" />
						<Grid x:Name="ContentPresenterGrid"
						      Margin="0,0,0,0"
						      Background="Transparent">
							<Grid.RenderTransform>
								<TranslateTransform x:Name="ContentPresenterTranslateTransform" />
							</Grid.RenderTransform>
							<ContentPresenter x:Name="ContentPresenter"
							                  Margin="{TemplateBinding Padding}"
							                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							                  Content="{TemplateBinding Content}"
							                  ContentTemplate="{TemplateBinding ContentTemplate}"
							                  ContentTransitions="{TemplateBinding ContentTransitions}" />
						</Grid>
						<!--
							The 'Xg' text simulates the amount of space one line of text will occupy.
							In the DataPlaceholder state, the Content is not loaded yet so we
							approximate the size of the item using placeholder text.
						-->
						<TextBlock x:Name="PlaceholderTextBlock"
						           Margin="{TemplateBinding Padding}"
						           AutomationProperties.AccessibilityView="Raw"
						           Foreground="{x:Null}"
						           IsHitTestVisible="False"
						           Opacity="0"
						           Text="Xg" />
						<Rectangle x:Name="PlaceholderRect"
						           Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
						           Visibility="Collapsed" />
						<Rectangle x:Name="MultiArrangeOverlayBackground"
						           Grid.ColumnSpan="2"
						           Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
						           IsHitTestVisible="False"
						           Opacity="0" />
						<Border x:Name="MultiSelectSquare"
						        Width="20"
						        Height="20"
						        Margin="12,0,0,0"
						        HorizontalAlignment="Left"
						        VerticalAlignment="Center"
						        BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
						        BorderThickness="2"
						        Visibility="Collapsed">
							<Border.Clip>
								<RectangleGeometry Rect="0,0,20,20">
									<RectangleGeometry.Transform>
										<TranslateTransform x:Name="MultiSelectClipTransform" />
									</RectangleGeometry.Transform>
								</RectangleGeometry>
							</Border.Clip>
							<Border.RenderTransform>
								<TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
							</Border.RenderTransform>
							<FontIcon x:Name="MultiSelectCheck"
							          FontFamily="{ThemeResource SymbolThemeFontFamily}"
							          FontSize="16"
							          Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
							          Glyph="&#xE73E;"
							          Opacity="0"
							          Visibility="Collapsed" />
						</Border>
						<TextBlock x:Name="MultiArrangeOverlayText"
						           Grid.ColumnSpan="2"
						           Margin="18,9,0,0"
						           AutomationProperties.AccessibilityView="Raw"
						           FontFamily="{ThemeResource ContentControlThemeFontFamily}"
						           FontSize="26.667"
						           Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
						           IsHitTestVisible="False"
						           Opacity="0"
						           Text="{Binding RelativeSource={RelativeSource TemplatedParent},
						                          Path=TemplateSettings.DragItemsCount}"
						           TextTrimming="WordEllipsis"
						           TextWrapping="Wrap" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TagButton" TargetType="Button">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="0" />
	</Style>

	<Style x:Key="InlineButton" TargetType="Button">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
		<Setter Property="FontSize" Value="20" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="8" />
	</Style>

	<Style x:Key="InlineToggleButton" TargetType="ToggleButton">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
		<Setter Property="FontSize" Value="20" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="8" />
	</Style>

	<Style x:Key="ThreadCommentListViewItemStyle"
	       BasedOn="{StaticResource NoSelectListViewItemStyle}"
	       TargetType="ListViewItem">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="MinHeight" Value="30" />
	</Style>

	<Style x:Key="FillWidthListViewItemStyle" TargetType="ListViewItem">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
	</Style>

</ResourceDictionary>
