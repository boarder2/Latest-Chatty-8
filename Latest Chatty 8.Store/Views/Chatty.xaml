<!--
	!!!!!IMPORTANT!!!!!
	Do not alter the order elements appear in without knowing what you're doing.
	Z-ordering is important for control visibility and interaciton prevention.
-->
<views:ShellView x:Class="Latest_Chatty_8.Views.Chatty"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:common="using:Latest_Chatty_8.Common"
                 xmlns:controls="using:Latest_Chatty_8.Controls"
                 xmlns:converters="using:Latest_Chatty_8.Converters"
                 xmlns:core="using:Latest_Chatty_8"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:local="using:Latest_Chatty_8.Controls"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:model="using:Latest_Chatty_8.DataModel"
                 xmlns:pr="using:PullToRefresh.UWP"
                 xmlns:views="using:Latest_Chatty_8.Views"
                 x:Name="pageRoot"
                 DataContext="{Binding RelativeSource={RelativeSource Self}}"
                 NavigationCacheMode="Required"
                 mc:Ignorable="d">
	<Page.Resources>
		<ResourceDictionary>
			<converters:NumberLimitConverter x:Key="NewChattyCountConverter" Limit="9" />
			<converters:EqualsZeroVisibilityConverter x:Key="EqualsZeroVisibilityConverter" />
			<Style x:Key="FilterCombo" TargetType="ComboBox">
				<Setter Property="Padding" Value="0,6,0,6" />
				<Setter Property="MinWidth" Value="{ThemeResource ComboBoxThemeMinWidth}" />
				<Setter Property="Foreground" Value="{ThemeResource ComboBoxForeground}" />
				<Setter Property="Background" Value="{ThemeResource ComboBoxBackground}" />
				<Setter Property="BorderBrush" Value="{ThemeResource ComboBoxBorderBrush}" />
				<Setter Property="BorderThickness" Value="{ThemeResource ComboBoxBorderThemeThickness}" />
				<Setter Property="TabNavigation" Value="Once" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
				<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
				<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
				<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
				<Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="VerticalAlignment" Value="Top" />
				<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
				<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<CarouselPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ComboBox">
							<Grid x:Name="LayoutRoot">
								<Grid.Resources>
									<Storyboard x:Key="OverlayOpeningAnimation">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0"
											                      KeyTime="0:0:0.383"
											                      Value="1.0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard x:Key="OverlayClosingAnimation">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
											<SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0"
											                      KeyTime="0:0:0.216"
											                      Value="0.0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</Grid.Resources>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="24" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<ContentPresenter x:Name="HeaderContentPresenter"
								                  Margin="{ThemeResource ComboBoxHeaderThemeMargin}"
								                  x:DeferLoadStrategy="Lazy"
								                  Content="{TemplateBinding Header}"
								                  ContentTemplate="{TemplateBinding HeaderTemplate}"
								                  FlowDirection="{TemplateBinding FlowDirection}"
								                  FontWeight="{ThemeResource ComboBoxHeaderThemeFontWeight}"
								                  Visibility="Collapsed" />
								<Border x:Name="Background"
								        Grid.Row="1"
								        Grid.ColumnSpan="2"
								        Background="{TemplateBinding Background}"
								        BorderBrush="{TemplateBinding BorderBrush}"
								        BorderThickness="{TemplateBinding BorderThickness}" />
								<Border x:Name="HighlightBackground"
								        Grid.Row="1"
								        Grid.ColumnSpan="2"
								        Background="{ThemeResource ComboBoxBackgroundUnfocused}"
								        BorderBrush="{ThemeResource ComboBoxBackgroundBorderBrushUnfocused}"
								        BorderThickness="{TemplateBinding BorderThickness}"
								        Opacity="0" />
								<ContentPresenter x:Name="ContentPresenter"
								                  Grid.Row="1"
								                  Margin="{TemplateBinding Padding}"
								                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								                  FontSize="12"
								                  Foreground="{ThemeResource ThemeHighlight}">
									<TextBlock x:Name="PlaceholderTextBlock"
									           Foreground="{ThemeResource ThemeHighlight}"
									           Text="{TemplateBinding PlaceholderText}" />
								</ContentPresenter>
								<FontIcon x:Name="DropDownGlyph"
								          Grid.Row="1"
								          Grid.Column="1"
								          Margin="0,6,6,6"
								          HorizontalAlignment="Right"
								          VerticalAlignment="Center"
								          AutomationProperties.AccessibilityView="Raw"
								          FontFamily="{ThemeResource SymbolThemeFontFamily}"
								          FontSize="12"
								          Foreground="{ThemeResource ThemeHighlight}"
								          Glyph="&#xE0E5;"
								          IsHitTestVisible="False" />
								<Popup x:Name="Popup">
									<Border x:Name="PopupBorder"
									        Margin="0,-1,0,-1"
									        HorizontalAlignment="Stretch"
									        Background="{ThemeResource ComboBoxDropDownBackground}"
									        BorderBrush="{ThemeResource ComboBoxDropDownBorderBrush}"
									        BorderThickness="{ThemeResource ComboBoxDropdownBorderThickness}">
										<ScrollViewer x:Name="ScrollViewer"
										              MinWidth="{Binding TemplateSettings.DropDownContentMinWidth,
										                                 RelativeSource={RelativeSource Mode=TemplatedParent}}"
										              AutomationProperties.AccessibilityView="Raw"
										              BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
										              Foreground="{ThemeResource ComboBoxDropDownForeground}"
										              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										              HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
										              IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
										              IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
										              IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
										              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										              VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
										              VerticalSnapPointsAlignment="Near"
										              VerticalSnapPointsType="OptionalSingle"
										              ZoomMode="Disabled">
											<ItemsPresenter Margin="{ThemeResource ComboBoxDropdownContentMargin}" />
										</ScrollViewer>
									</Border>
								</Popup>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal" />
										<VisualState x:Name="PointerOver">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBackgroundPointerOver}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBorderBrushPointerOver}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Pressed">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBackgroundPressed}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBorderBrushPressed}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Disabled">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBackgroundDisabled}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBorderBrushDisabled}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundDisabled}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundDisabled}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundDisabled}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph" Storyboard.TargetProperty="Foreground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDropDownGlyphForegroundDisabled}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="FocusStates">
										<VisualState x:Name="Focused">
											<Storyboard>
												<DoubleAnimation Duration="0"
												                 Storyboard.TargetName="HighlightBackground"
												                 Storyboard.TargetProperty="Opacity"
												                 To="1" />
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="BorderBrush">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBackgroundBorderBrushFocused}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocused}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocused}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph" Storyboard.TargetProperty="Foreground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDropDownGlyphForegroundFocused}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="FocusedPressed">
											<Storyboard>
												<DoubleAnimation Duration="0"
												                 Storyboard.TargetName="HighlightBackground"
												                 Storyboard.TargetProperty="Opacity"
												                 To="1" />
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocusedPressed}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPlaceHolderForegroundFocusedPressed}" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph" Storyboard.TargetProperty="Foreground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDropDownGlyphForegroundFocusedPressed}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Unfocused" />
										<VisualState x:Name="PointerFocused" />
										<VisualState x:Name="FocusedDropDown">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Duration="0"
												                               Storyboard.TargetName="PopupBorder"
												                               Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<Visibility>Visible</Visibility>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="DropDownStates">
										<VisualState x:Name="Opened">
											<Storyboard>
												<SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
												                         OffsetFromCenter="{Binding TemplateSettings.DropDownOffset,
												                                                    RelativeSource={RelativeSource Mode=TemplatedParent}}"
												                         OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight,
												                                                RelativeSource={RelativeSource Mode=TemplatedParent}}"
												                         OpenedTargetName="PopupBorder" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Closed">
											<Storyboard>
												<SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
												                          OffsetFromCenter="{Binding TemplateSettings.DropDownOffset,
												                                                     RelativeSource={RelativeSource Mode=TemplatedParent}}"
												                          OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight,
												                                                 RelativeSource={RelativeSource Mode=TemplatedParent}}"
												                          OpenedTargetName="PopupBorder" />
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Page.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<Grid.ColumnDefinitions>
			<ColumnDefinition x:Name="columnLeft" Width="1*" />
			<ColumnDefinition x:Name="columnRight" Width="3*" />
		</Grid.ColumnDefinitions>

		<Grid x:Name="chattyCommandBarGroup" Grid.Row="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<StackPanel Grid.Column="0"
			            VerticalAlignment="Center"
			            Orientation="Horizontal">

				<TextBlock Grid.Row="0"
				           Grid.Column="0"
				           Margin="6,0,0,0"
				           HorizontalAlignment="Right"
				           VerticalAlignment="Center"
				           FontSize="12"
				           Text="Filter:" />
				<ComboBox x:Name="filterCombo"
				          Grid.Row="0"
				          Grid.Column="1"
				          MinWidth="10"
				          Margin="6,0,6,0"
				          VerticalAlignment="Center"
				          Background="Transparent"
				          BorderThickness="0"
				          SelectedIndex="{x:Bind Path=Settings.FilterIndex, Mode=TwoWay}"
				          SelectionChanged="FilterChanged"
				          Style="{StaticResource FilterCombo}">
					<ComboBox.Items>
						<ComboBoxItem Tag="all">All</ComboBoxItem>
						<ComboBoxItem Tag="collapsed">Collapsed</ComboBoxItem>
						<ComboBoxItem Tag="new">New</ComboBoxItem>
						<ComboBoxItem Tag="news">News</ComboBoxItem>
						<ComboBoxItem Tag="pinned">Pinned</ComboBoxItem>
						<ComboBoxItem Tag="participated">Participated</ComboBoxItem>
						<ComboBoxItem Tag="has replies">Has replies</ComboBoxItem>
						<ComboBoxItem IsEnabled="False">
							<Rectangle Height="1" Fill="Gray" />
						</ComboBoxItem>
						<ComboBoxItem Tag="search">Search</ComboBoxItem>
					</ComboBox.Items>
				</ComboBox>

				<TextBlock Grid.Row="1"
				           Grid.Column="0"
				           HorizontalAlignment="Right"
				           VerticalAlignment="Center"
				           FontSize="12"
				           Text="Sort:" />
				<ComboBox x:Name="orderCombo"
				          Grid.Row="1"
				          Grid.Column="1"
				          Margin="6,0,0,0"
				          VerticalAlignment="Center"
				          Background="Transparent"
				          BorderThickness="0"
				          SelectedIndex="{x:Bind Path=Settings.OrderIndex, Mode=TwoWay}"
				          SelectionChanged="SortChanged"
				          Style="{StaticResource FilterCombo}">
					<ComboBox.Items>
						<ComboBoxItem Tag="latestreply">Latest</ComboBoxItem>
						<ComboBoxItem Tag="mostreplies">Reply count</ComboBoxItem>
						<ComboBoxItem Tag="hasnewreplies">New replies</ComboBoxItem>
						<ComboBoxItem Tag="participated">Participated</ComboBoxItem>
						<!--<ComboBoxItem Tag="lol">Lols</ComboBoxItem>
							<ComboBoxItem Tag="inf">Infs</ComboBoxItem>-->
					</ComboBox.Items>
				</ComboBox>
			</StackPanel>
			<StackPanel Grid.Column="1"
			            HorizontalAlignment="Stretch"
			            FlowDirection="RightToLeft"
			            Orientation="Horizontal">
				<Button x:Name="sortThreadsButton"
				        Click="ReSortClicked"
				        FlowDirection="LeftToRight"
				        IsEnabled="{x:Bind Path=ChattyManager.UnsortedChattyPosts, Mode=OneWay}"
				        Style="{StaticResource InlineButton}">
					<ToolTipService.ToolTip>
						<StackPanel Orientation="Vertical">
							<TextBlock Text="Re-Sort Threads" />
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{x:Bind Path=ChattyManager.NewThreadCount, Mode=OneWay}" Visibility="{x:Bind Path=ChattyManager.NewThreadCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}, Mode=OneWay}" />
								<TextBlock Margin="4,0,0,0"
								           Text="new root post(s)"
								           Visibility="{x:Bind Path=ChattyManager.NewThreadCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}, Mode=OneWay}" />
							</StackPanel>
						</StackPanel>
					</ToolTipService.ToolTip>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<TextBlock VerticalAlignment="Center" Text="" />
							<TextBlock Margin="6,0,0,0"
							           VerticalAlignment="Center"
							           FontFamily="Segoe UI"
							           FontSize="14"
							           Text="{x:Bind Path=ChattyManager.NewThreadCount, Converter={StaticResource NewChattyCountConverter}, Mode=OneWay}"
							           Visibility="{x:Bind Path=ChattyManager.NewThreadCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}, Mode=OneWay}" />
							<TextBlock Margin="4,0,0,0"
							           HorizontalAlignment="Center"
							           VerticalAlignment="Center"
							           FontSize="14"
							           Text=""
							           Visibility="{x:Bind Path=ChattyManager.NewRepliesToUser, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" />
						</StackPanel>
					</Button.Content>
				</Button>
			</StackPanel>
		</Grid>
		<!--#endregion-->

		<Grid x:Name="mainContent"
		      Grid.Row="0"
		      Grid.RowSpan="2"
		      Grid.Column="1"
		      Margin="4,0,0,0"
		      BorderBrush="LightGray"
		      BorderThickness="2,0,0,0">
			<!--#region Thread View-->
			<local:SingleThreadInlineControl x:Name="singleThreadControl"
			                                 LinkClicked="InlineControlLinkClicked"
			                                 ShellMessage="InlineControlShellMessage" />
			<!--#endregion-->
		</Grid>

		<!--#region Chatty List-->
		<Grid x:Name="chattyListGroup"
		      Grid.Row="1"
		      Grid.Column="0">

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<TextBox x:Name="searchTextBox"
			         Grid.Row="1"
			         Margin="6"
			         GotFocus="SearchTextBoxGotFocus"
			         KeyUp="SearchKeyUp"
			         LostFocus="SearchTextBoxLostFocus"
			         PlaceholderText="search"
			         TextChanged="SearchTextChanged"
			         Visibility="{x:Bind ShowSearch, Mode=OneWay, Converter={StaticResource BoolToVisConverter}}" />
			<ProgressBar x:Name="fullRefreshProgress"
			             Grid.Row="2"
			             HorizontalAlignment="Stretch"
			             VerticalAlignment="Top"
			             IsIndeterminate="True"
			             Visibility="{x:Bind Path=ChattyManager.IsFullUpdateHappening, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" />
			<Viewbox Grid.Row="3"
			         MaxHeight="50"
			         StretchDirection="Both"
			         Visibility="{x:Bind Path=ChattyManager.ChattyIsLoaded, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}">
				<TextBlock x:Name="noSearchResults"
				           Text="No results."
				           Visibility="{x:Bind Path=ChattyManager.Chatty.Count, Converter={StaticResource EqualsZeroVisibilityConverter}, Mode=OneWay}" />
			</Viewbox>
			<pr:PullToRefreshBox Grid.Row="3"
			                     RefreshInvoked="ChattyPullRefresh"
			                     Visibility="{x:Bind Path=ChattyManager.IsFullUpdateHappening, Converter={StaticResource NotBoolToVisConverter}, Mode=OneWay}">
				<pr:PullToRefreshBox.TopIndicatorTemplate>
					<DataTemplate>
						<pr:PullRefreshProgressControl Progress="{Binding}"
						                               PullToRefreshText="Pull to refresh"
						                               ReleaseToRefreshText="Release to refresh" />
					</DataTemplate>
				</pr:PullToRefreshBox.TopIndicatorTemplate>

				<ListView x:Name="threadList"
				          ItemContainerStyle="{StaticResource ThreadListViewItemStyle}"
				          ItemsSource="{x:Bind Path=ChattyManager.Chatty}"
				          SelectedValue="{Binding Path=SelectedThread,
				                                  Mode=TwoWay}"
				          SelectionChanged="ChattyListSelectionChanged"
				          SelectionMode="Single">
					<ListView.ItemTemplate>
						<DataTemplate x:DataType="model:CommentThread">
							<Grid ManipulationCompleted="ChattyListManipulationCompleted"
							      ManipulationDelta="ChattyListManipulationDelta"
							      ManipulationMode="TranslateX, System"
							      ManipulationStarted="ChattyListManipulationStarted">

								<Grid x:Name="swipeContainer"
								      x:DeferLoadStrategy="Lazy"
								      Background="{ThemeResource ThemeHighlight}"
								      IsHitTestVisible="False">
									<StackPanel x:Name="swipeTextContainer"
									            FlowDirection="LeftToRight"
									            Orientation="Horizontal">
										<StackPanel.RenderTransform>
											<TranslateTransform />
										</StackPanel.RenderTransform>
										<TextBlock x:Name="swipeIcon"
										           VerticalAlignment="Center"
										           FontFamily="Segoe MDL2 Assets" />
										<TextBlock x:Name="swipeText"
										           Margin="6,0,6,0"
										           VerticalAlignment="Center" />
									</StackPanel>
								</Grid>
								<Grid x:Name="previewContainer"
								      IsHitTestVisible="False"
								      Padding="6,0,0,0">
									<Grid.RenderTransform>
										<TranslateTransform />
									</Grid.RenderTransform>
									<Grid Margin="0,2,12,0">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>
										<Grid Grid.Row="0" Margin="0,0,4,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
												<TextBlock VerticalAlignment="Center"
												           Foreground="{x:Bind Path=Comments[0].AuthorType, Converter={StaticResource AuthorTypeToColorConverter}, Mode=OneWay}"
												           Text="{x:Bind Path=Comments[0].Author}" />
												<TextBlock Margin="4,0,0,0"
												           Text="⚡"
												           Visibility="{x:Bind Path=Comments[0].IsTenYearUser, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" />
											</StackPanel>
											<StackPanel Grid.Column="1"
											            HorizontalAlignment="Right"
											            Orientation="Horizontal">
												<TextBlock Margin="0,0,4,0"
												           VerticalAlignment="Center"
												           FontFamily="Segoe MDL2 Assets"
												           Foreground="{ThemeResource ThemeHighlight}"
												           Text=""
												           ToolTipService.ToolTip="New root post"
												           Visibility="{x:Bind Path=ViewedNewlyAdded, Converter={StaticResource NotBoolToVisConverter}, Mode=OneWay}" />
												<TextBlock VerticalAlignment="Center"
												           Foreground="#999999"
												           Text="{x:Bind Path=Comments[0].Date, Converter={StaticResource RelativeDateTimeConverter}, Mode=OneWay}" />
											</StackPanel>
										</Grid>

										<Grid Grid.Row="1">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="40" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<!--  Reply Count, etc  -->
											<Border Grid.Column="0"
											        Margin="0,4,0,0"
											        Background="{x:Bind Path=Comments[0].Category, Converter={StaticResource CategoryConverter}, Mode=OneWay}">
												<Grid>
													<TextBlock HorizontalAlignment="Center"
													           VerticalAlignment="Center"
													           FontSize="20"
													           FontWeight="Bold"
													           Foreground="#000000"
													           Text="{x:Bind Path=Comments.Count, Mode=OneWay}" />
												</Grid>
											</Border>
											<Grid Grid.Column="1">
												<Grid.RowDefinitions>
													<RowDefinition Height="*" />
													<RowDefinition Height="Auto" />
												</Grid.RowDefinitions>
												<Grid Grid.Row="0" Margin="6,2,2,2">
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="*" />
															<ColumnDefinition Width="Auto" />
														</Grid.ColumnDefinitions>

														<TextBlock Grid.Column="0"
														           Height="{x:Bind Path=IsCollapsed, Converter={StaticResource PreviewTextSizeConverter}, Mode=OneWay}"
														           Foreground="{x:Bind Path=HasNewReplies, Converter={StaticResource NewReplyConverter}, Mode=OneWay}"
														           Text="{x:Bind Path=Comments[0].Preview}"
														           TextTrimming="CharacterEllipsis"
														           TextWrapping="Wrap" />
														<StackPanel Grid.Column="1"
														            Margin="6,6,0,0"
														            HorizontalAlignment="Center"
														            Orientation="Vertical">
															<TextBlock Margin="0,0,0,6"
															           FontFamily="Segoe MDL2 Assets"
															           Foreground="{ThemeResource ThemeHighlight}"
															           Text=""
															           ToolTipService.ToolTip="You Participated"
															           Visibility="{x:Bind Path=UserParticipated, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" />
															<TextBlock Margin="0,0,0,6"
															           FontFamily="Segoe MDL2 Assets"
															           Opacity=".05"
															           Text=""
															           ToolTipService.ToolTip="You Participated"
															           Visibility="{x:Bind Path=UserParticipated, Converter={StaticResource NotBoolToVisConverter}, Mode=OneWay}" />
															<TextBlock Margin="0,0,0,6"
															           FontFamily="Segoe MDL2 Assets"
															           Foreground="{ThemeResource ThemeHighlight}"
															           Text=""
															           ToolTipService.ToolTip="Has New Replies To You"
															           Visibility="{x:Bind HasNewRepliesToUser, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" />
															<TextBlock Margin="0,0,0,6"
															           FontFamily="Segoe MDL2 Assets"
															           Opacity=".05"
															           Text=""
															           ToolTipService.ToolTip="Has New Replies To You"
															           Visibility="{x:Bind HasNewRepliesToUser, Converter={StaticResource NotBoolToVisConverter}, Mode=OneWay}" />
															<Grid Visibility="{x:Bind IsPinned, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}">
																<TextBlock FontFamily="Segoe MDL2 Assets"
																           Foreground="{ThemeResource ThemeHighlight}"
																           Text=""
																           ToolTipService.ToolTip="Pinned" />
																<TextBlock FontFamily="Segoe MDL2 Assets"
																           Foreground="{ThemeResource ThemeHighlight}"
																           Text=""
																           ToolTipService.ToolTip="Pinned" />
															</Grid>
															<TextBlock FontFamily="Segoe MDL2 Assets"
															           Opacity=".05"
															           Text=""
															           ToolTipService.ToolTip="Pinned"
															           Visibility="{x:Bind IsPinned, Converter={StaticResource NotBoolToVisConverter}, Mode=OneWay}" />
														</StackPanel>
													</Grid>
												</Grid>
												<StackPanel Grid.Row="1"
												            Margin="2,0,0,0"
												            VerticalAlignment="Bottom"
												            Orientation="Horizontal"
												            Visibility="{x:Bind Mode=OneWay, Path=IsCollapsed, Converter={StaticResource NotBoolToVisConverter}}">
													<Rectangle Width="{x:Bind Mode=OneWay, Path=Comments[0].LolCount, Converter={StaticResource LolIndicatorConverter}}"
													           Height="{x:Bind Mode=OneWay, Path=Comments[0].LolCount, Converter={StaticResource LolIndicatorConverter}}"
													           MinWidth="5"
													           MinHeight="5"
													           MaxWidth="12"
													           MaxHeight="12"
													           Margin="1"
													           VerticalAlignment="Bottom"
													           Fill="#FF8800"
													           Visibility="{x:Bind Mode=OneWay, Path=Comments[0].LolCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}}" />
													<Rectangle Width="{x:Bind Mode=OneWay, Path=Comments[0].InfCount, Converter={StaticResource LolIndicatorConverter}}"
													           Height="{x:Bind Mode=OneWay, Path=Comments[0].InfCount, Converter={StaticResource LolIndicatorConverter}}"
													           MinWidth="5"
													           MinHeight="5"
													           MaxWidth="12"
													           MaxHeight="12"
													           Margin="1"
													           VerticalAlignment="Bottom"
													           Fill="#0099CC"
													           Visibility="{x:Bind Mode=OneWay, Path=Comments[0].InfCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}}" />
													<Rectangle Width="{x:Bind Mode=OneWay, Path=Comments[0].UnfCount, Converter={StaticResource LolIndicatorConverter}}"
													           Height="{x:Bind Mode=OneWay, Path=Comments[0].UnfCount, Converter={StaticResource LolIndicatorConverter}}"
													           MinWidth="5"
													           MinHeight="5"
													           MaxWidth="12"
													           MaxHeight="12"
													           Margin="1"
													           VerticalAlignment="Bottom"
													           Fill="#FF0000"
													           Visibility="{x:Bind Mode=OneWay, Path=Comments[0].UnfCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}}" />
													<Rectangle Width="{x:Bind Mode=OneWay, Path=Comments[0].TagCount, Converter={StaticResource LolIndicatorConverter}}"
													           Height="{x:Bind Mode=OneWay, Path=Comments[0].TagCount, Converter={StaticResource LolIndicatorConverter}}"
													           MinWidth="5"
													           MinHeight="5"
													           MaxWidth="12"
													           MaxHeight="12"
													           Margin="1"
													           VerticalAlignment="Bottom"
													           Fill="#77BB22"
													           Visibility="{x:Bind Mode=OneWay, Path=Comments[0].TagCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}}" />
													<Rectangle Width="{x:Bind Mode=OneWay, Path=Comments[0].WtfCount, Converter={StaticResource LolIndicatorConverter}}"
													           Height="{x:Bind Mode=OneWay, Path=Comments[0].WtfCount, Converter={StaticResource LolIndicatorConverter}}"
													           MinWidth="5"
													           MinHeight="5"
													           MaxWidth="12"
													           MaxHeight="12"
													           Margin="1"
													           VerticalAlignment="Bottom"
													           Fill="#C000C0"
													           Visibility="{x:Bind Mode=OneWay, Path=Comments[0].WtfCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}}" />
													<Rectangle Width="{x:Bind Mode=OneWay, Path=Comments[0].UghCount, Converter={StaticResource LolIndicatorConverter}}"
													           Height="{x:Bind Mode=OneWay, Path=Comments[0].UghCount, Converter={StaticResource LolIndicatorConverter}}"
													           MinWidth="5"
													           MinHeight="5"
													           MaxWidth="12"
													           MaxHeight="12"
													           Margin="1"
													           VerticalAlignment="Bottom"
													           Fill="#00BB00"
													           Visibility="{x:Bind Mode=OneWay, Path=Comments[0].UghCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}}" />
												</StackPanel>

											</Grid>
										</Grid>
									</Grid>
									<Grid Background="Black"
									      Opacity=".4"
									      Visibility="{x:Bind Mode=OneWay, Path=IsCollapsed, Converter={StaticResource BoolToVisConverter}}" />
								</Grid>
								<!--  Use a top level element that is the only thing with hit test enabled to hopefully prevent issues I've seen where swiping doesn't work.  -->
								<Rectangle Fill="Transparent"
								           Holding="ThreadListRightHeld"
								           RightTapped="ThreadListRightTapped">
									<FlyoutBase.AttachedFlyout>
										<MenuFlyout>
											<MenuFlyoutItem Click="PinClicked"
											                Text="Pin"
											                Visibility="{x:Bind Path=IsPinned, Converter={StaticResource NotBoolToVisConverter}, Mode=OneWay}" />
											<MenuFlyoutItem Click="PinClicked"
											                Text="Unpin"
											                Visibility="{x:Bind Path=IsPinned, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" />
											<MenuFlyoutItem Click="CollapseClicked"
											                Text="Collapse"
											                Visibility="{x:Bind Path=IsCollapsed, Converter={StaticResource NotBoolToVisConverter}, Mode=OneWay}" />
											<MenuFlyoutItem Click="CollapseClicked"
											                Text="Uncollapse"
											                Visibility="{x:Bind Path=IsCollapsed, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" />
											<MenuFlyoutItem Click="MarkThreadReadClicked" Text="Mark thread read" />
										</MenuFlyout>
									</FlyoutBase.AttachedFlyout>
								</Rectangle>
							</Grid>
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
			</pr:PullToRefreshBox>
			<Button x:Name="goToChattyTopButton"
			        Grid.Row="3"
			        Grid.Column="0"
			        HorizontalAlignment="Right"
			        VerticalAlignment="Bottom"
			        Background="Transparent"
			        BorderThickness="0"
			        Click="GoToChattyTopClicked"
			        Visibility="Collapsed">
				<Button.Content>
					<Grid Opacity=".75">
						<Ellipse Width="32"
						         Height="32"
						         Fill="{ThemeResource ThemeHighlight}" />
						<TextBlock HorizontalAlignment="Center"
						           VerticalAlignment="Center"
						           FontFamily="Segoe MDL2 Assets"
						           FontSize="20"
						           Foreground="White"
						           Text="" />
					</Grid>
				</Button.Content>
			</Button>
			<CommandBar Grid.Row="5" ClosedDisplayMode="{x:Bind Path=Settings.PinnedChattyAppBar, Converter={StaticResource BooleanToClosedDisplayModeConverter}, Mode=OneWay}">
				<CommandBar.SecondaryCommands>
					<AppBarToggleButton Icon="Pin"
					                    IsChecked="{x:Bind Path=Settings.PinnedChattyAppBar, Converter={StaticResource NullableBooleanConverter}, Mode=TwoWay}"
					                    Label="Pin Bar Open" />
				</CommandBar.SecondaryCommands>
				<AppBarButton Click="MarkAllRead"
				              Icon="Read"
				              ToolTipService.ToolTip="Mark All Threads Read" />
				<AppBarSeparator />
				<AppBarButton x:Name="newRootPostButton"
				              Click="NewRootPostButtonClicked"
				              Icon="Comment"
				              ToolTipService.ToolTip="New Root Post" />
			</CommandBar>
		</Grid>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="InputTypeStates">
				<VisualState>
					<VisualState.StateTriggers>
						<common:InputTypeTrigger PointerType="Mouse" TargetElement="{x:Bind threadList}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="goToChattyTopButton.Visibility" Value="Collapsed" />
					</VisualState.Setters>
				</VisualState>
				<VisualState>
					<VisualState.StateTriggers>
						<common:InputTypeTrigger PointerType="Touch" TargetElement="{x:Bind threadList}" />
						<common:InputTypeTrigger PointerType="Pen" TargetElement="{x:Bind threadList}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="goToChattyTopButton.Visibility" Value="Visible" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="visualState">
				<!--<VisualStateGroup.Transitions>
					<VisualTransition To="VisualStateBig" GeneratedDuration="0:0:0.5" />
				</VisualStateGroup.Transitions>-->
				<VisualState x:Name="VisualStatePhone">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<!--<Setter Target="chattyListGroup.(Grid.RowSpan)" Value="2" />-->
						<Setter Target="mainContent.(Grid.Row)" Value="1" />
						<Setter Target="mainContent.(Grid.RowSpan)" Value="1" />
						<Setter Target="mainContent.(Grid.Column)" Value="0" />
						<Setter Target="mainContent.Visibility" Value="Collapsed" />
						<Setter Target="mainContent.Margin" Value="0,4,0,0" />
						<Setter Target="mainContent.BorderThickness" Value="0,2,0,0" />
						<Setter Target="columnLeft.Width" Value="*" />
						<Setter Target="columnRight.Width" Value="Auto" />
						<Setter Target="singleThreadControl.IsEnabled" Value="False" />
						<Setter Target="threadList.SelectedIndex" Value="-1" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="VisualStateMid">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="600" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="columnLeft.Width" Value="260" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="VisualStateMidBig">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="800" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="columnLeft.Width" Value="300" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="VisualStateBig">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1000" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="columnLeft.Width" Value="400" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="VisualStateExtraWide">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1200" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="columnLeft.Width" Value="460" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</Grid>
</views:ShellView>
